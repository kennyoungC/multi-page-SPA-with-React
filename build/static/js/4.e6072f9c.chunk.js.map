{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuotes.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCqE/BC,EAhEG,SAACL,GAEjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAmBrB,OACE,mCAOE,cAAC,EAAD,UACE,uBAEEN,UAAWC,IAAQO,KACnBC,SA7BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAGZ,KAAzBF,EAAcI,QAAwC,KAAvBD,EAAYC,QAE/CjB,EAAMkB,WAAW,CAAEC,OAAQN,EAAeO,KAAMJ,KAiB5C,UAKGhB,EAAMqB,WACL,qBAAKpB,UAAWC,IAAQoB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKtB,UAAWC,IAAQsB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,OAEtC,sBAAKL,UAAWC,IAAQsB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,OAEpC,qBAAKP,UAAWC,IAAQ4B,QAAxB,SACE,wBAEE7B,UAAU,MAFZ,iC,gBCjCG8B,UAnBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,aAEV,CAACD,EAAQC,IAMZ,OACE,cAAC,EAAD,CAAWf,UAAsB,YAAXc,EAAsBjB,WALtB,SAACqB,GACvBL,EAAYK","file":"static/js/4.e6072f9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3IVoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__29RVK\",\"loading\":\"QuoteForm_loading__10wUI\",\"control\":\"QuoteForm_control__2A6Ek\",\"actions\":\"QuoteForm_actions__3AESE\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from \"react\"\n// import { useState } from \"react\"\n// import { Prompt } from \"react-router-dom\"\n\nimport Card from \"../UI/Card\"\nimport LoadingSpinner from \"../UI/LoadingSpinner\"\nimport classes from \"./QuoteForm.module.css\"\n\nconst QuoteForm = (props) => {\n  // const [isUserEntereringForm, setIsUserEntereringForm] = useState(false)\n  const authorInputRef = useRef()\n  const textInputRef = useRef()\n\n  function submitFormHandler(event) {\n    event.preventDefault()\n\n    const enteredAuthor = authorInputRef.current.value\n    const enteredText = textInputRef.current.value\n\n    // optional: Could validate here\n    if (enteredAuthor.trim() === \"\" && enteredText.trim() === \"\") return\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText })\n  }\n  // const onFocusHandler = () => {\n  //   setIsUserEntereringForm(true)\n  // }\n  // const finishEntering = () => {\n  //   setIsUserEntereringForm(false)\n  // }\n  return (\n    <>\n      {/* <Prompt\n        when={isUserEntereringForm}\n        message={(location) =>\n          \"Are you sure you want to leave this page? All DATA WILL BE LOST!!\"\n        }\n      /> */}\n      <Card>\n        <form\n          // onFocus={onFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              // onClick={finishEntering}\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  )\n}\n\nexport default QuoteForm\n","import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\"\r\nimport useHttp from \"../hooks/use-http\"\r\nimport { addQuote } from \"../lib/api\"\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\")\r\n    }\r\n  }, [status, navigate])\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData)\r\n  }\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  )\r\n}\r\n\r\nexport default NewQuote\r\n"],"sourceRoot":""}