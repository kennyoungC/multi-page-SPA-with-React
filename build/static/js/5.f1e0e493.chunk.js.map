{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.jsx"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,iFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBC0CVC,UAxCK,WAClB,IAEQC,EAFOC,cAEPD,QAER,EAKIE,YAAQC,KAAgB,GAJ1BC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,EAAYJ,KACX,CAACI,EAAaJ,IAEF,YAAXK,EAEA,qBAAKX,UAAU,WAAf,SACE,cAACgB,EAAA,EAAD,MAKFF,EACK,mBAAGd,UAAU,WAAb,SAAyBc,IAG7BF,EAAYT,KAKf,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAMS,EAAYT,KAAMC,OAAQQ,EAAYR,SAC9D,cAAC,IAAD,OANK","file":"static/js/5.f1e0e493.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1Eqq-\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\"\r\nimport { useParams, Outlet } from \"react-router-dom\"\r\n\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\"\r\nimport useHttp from \"../hooks/use-http\"\r\nimport { getSingleQuote } from \"../lib/api\"\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams()\r\n\r\n  const { quoteId } = params\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true)\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId)\r\n  }, [sendRequest, quoteId])\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail\r\n"],"sourceRoot":""}